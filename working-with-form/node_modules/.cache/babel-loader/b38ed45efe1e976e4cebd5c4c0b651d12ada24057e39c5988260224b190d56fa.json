{"ast":null,"code":"var _jsxFileName = \"/home/dochien0204/Documents/ReactJS/working-with-form/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  let regexEmail = /([a-zA-Z0-9]+)([\\.{1}])?([a-zA-Z0-9]+)\\@gmail([\\.])com/g;\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [nameInputTouched, setNameInputTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailInputTouched, setEmailInputTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '' && nameInputTouched;\n  const nameInputIsInvalid = !enteredNameIsValid && nameInputTouched;\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && emailInputTouched;\n  let emailInputIsInvalid = !enteredEmailIsValid && emailInputTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && !emailInputIsInvalid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setNameInputTouched(true);\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setNameInputTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n  };\n  const mailInputChangeHandler = event => {\n    setEmailInputTouched(true);\n    setEnteredEmail(event.target.value);\n    console.log(enteredEmail);\n  };\n  const mailInputBlurHandler = event => {\n    setEmailInputTouched(true);\n    if (emailInputIsInvalid) {\n      return;\n    }\n  };\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    setNameInputTouched(true);\n    setEmailInputTouched(true);\n    if (!enteredNameIsValid && !nameInputIsInvalid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setNameInputTouched(false);\n    setEmailInputTouched(false);\n  };\n  const nameInputClasses = !nameInputIsInvalid ? 'form-control' : 'form-control invalid';\n  const mailInputClasses = !emailInputIsInvalid ? 'form-control' : 'form-control invalid';\n  console.log(emailInputIsInvalid);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: mailInputChangeHandler,\n        onBlur: mailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email is required or email is invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"VIttBAcURwyzf80wKCERo+Nty0w=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","regexEmail","enteredName","setEnteredName","nameInputTouched","setNameInputTouched","enteredEmail","setEnteredEmail","emailInputTouched","setEmailInputTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","mailInputChangeHandler","console","log","mailInputBlurHandler","onSubmitHandler","preventDefault","nameInputClasses","mailInputClasses"],"sources":["/home/dochien0204/Documents/ReactJS/working-with-form/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  \n  let regexEmail = /([a-zA-Z0-9]+)([\\.{1}])?([a-zA-Z0-9]+)\\@gmail([\\.])com/g;\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [nameInputTouched, setNameInputTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailInputTouched, setEmailInputTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '' && nameInputTouched;\n  const nameInputIsInvalid = !enteredNameIsValid && nameInputTouched;\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && emailInputTouched;\n  let emailInputIsInvalid = !enteredEmailIsValid && emailInputTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && !emailInputIsInvalid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setNameInputTouched(true);\n    setEnteredName(event.target.value);  \n  };\n\n  const nameInputBlurHandler = event => {\n    setNameInputTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n  }\n\n  const mailInputChangeHandler = event => {\n      setEmailInputTouched(true);\n      setEnteredEmail(event.target.value);\n      console.log(enteredEmail);\n    }\n\n  const mailInputBlurHandler = event => {\n    setEmailInputTouched(true);\n    if (emailInputIsInvalid) {\n      return;\n    }\n  }\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    setNameInputTouched(true);\n    setEmailInputTouched(true);\n\n    if (!enteredNameIsValid && !nameInputIsInvalid) {\n       return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setNameInputTouched(false);\n    setEmailInputTouched(false);\n  };\n\n  const nameInputClasses = !nameInputIsInvalid ? 'form-control' : 'form-control invalid';\n  const mailInputClasses = !emailInputIsInvalid ? 'form-control' : 'form-control invalid';\n\n\n  console.log(emailInputIsInvalid);\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name is required</p>}\n      </div>\n      <div className={mailInputClasses}>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={mailInputChangeHandler}\n          onBlur={mailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Email is required or email is invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}