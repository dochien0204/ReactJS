{"ast":null,"code":"var _jsxFileName = \"/home/dochien0204/Documents/ReactJS/working-with-form/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  let regexEmail = /([a-zA-Z0-9]+)([\\.{1}])?([a-zA-Z0-9]+)\\@gmail([\\.])com/g;\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameInputChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailInputTouched, setEmailInputTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\" && regexEmail.test(enteredEmail);\n  let emailInputIsInvalid = !enteredEmailIsValid && emailInputTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && !emailInputIsInvalid) {\n    formIsValid = true;\n  }\n  const mailInputChangeHandler = event => {\n    setEmailInputTouched(true);\n    setEnteredEmail(event.target.value);\n  };\n  const mailInputBlurHandler = event => {\n    setEmailInputTouched(true);\n    if (emailInputIsInvalid) {\n      return;\n    }\n  };\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    resetNameInput();\n    setEnteredEmail(\"\");\n    setEmailInputTouched(false);\n  };\n  const nameInputClasses = nameInputHasError ? \"form-control\" : \"form-control invalid\";\n  const mailInputClasses = !emailInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: mailInputChangeHandler,\n        onBlur: mailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email is required or email is invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"Eawa0jLfuS7/yKNWn3q0Jh5i2jI=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","regexEmail","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameInputChangeHandler","inputBlurHandler","nameInputBlurHandler","reset","resetNameInput","trim","enteredEmail","setEnteredEmail","emailInputTouched","setEmailInputTouched","enteredEmailIsValid","test","emailInputIsInvalid","formIsValid","mailInputChangeHandler","event","target","mailInputBlurHandler","onSubmitHandler","preventDefault","nameInputClasses","mailInputClasses"],"sources":["/home/dochien0204/Documents/ReactJS/working-with-form/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  let regexEmail = /([a-zA-Z0-9]+)([\\.{1}])?([a-zA-Z0-9]+)\\@gmail([\\.])com/g;\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameInputChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailInputTouched, setEmailInputTouched] = useState(false);\n\n  const enteredEmailIsValid =\n    enteredEmail.trim() !== \"\" && regexEmail.test(enteredEmail);\n  let emailInputIsInvalid = !enteredEmailIsValid && emailInputTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && !emailInputIsInvalid) {\n    formIsValid = true;\n  }\n\n  const mailInputChangeHandler = (event) => {\n    setEmailInputTouched(true);\n    setEnteredEmail(event.target.value);\n  };\n\n  const mailInputBlurHandler = (event) => {\n    setEmailInputTouched(true);\n    if (emailInputIsInvalid) {\n      return;\n    }\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    resetNameInput();\n\n    setEnteredEmail(\"\");\n    setEmailInputTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n  const mailInputClasses = !emailInputIsInvalid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p className=\"error-text\">Name is required</p>}\n      </div>\n      <div className={mailInputClasses}>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={mailInputChangeHandler}\n          onBlur={mailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">Email is required or email is invalid</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}