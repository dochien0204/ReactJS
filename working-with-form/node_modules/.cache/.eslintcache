[{"/home/dochien0204/Documents/ReactJS/working-with-form/src/index.js":"1","/home/dochien0204/Documents/ReactJS/working-with-form/src/App.js":"2","/home/dochien0204/Documents/ReactJS/working-with-form/src/components/SimpleInput.js":"3","/home/dochien0204/Documents/ReactJS/working-with-form/src/hooks/use-input.js":"4","/home/dochien0204/Documents/ReactJS/working-with-form/src/components/BasicForm.js":"5"},{"size":179,"mtime":1676047998134,"results":"6","hashOfConfig":"7"},{"size":213,"mtime":1676307363709,"results":"8","hashOfConfig":"9"},{"size":2151,"mtime":1676306953024,"results":"10","hashOfConfig":"9"},{"size":747,"mtime":1676306582293,"results":"11","hashOfConfig":"9"},{"size":3067,"mtime":1676308523785,"results":"12","hashOfConfig":"9"},{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l39698",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"t034b1",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/dochien0204/Documents/ReactJS/working-with-form/src/index.js",[],[],"/home/dochien0204/Documents/ReactJS/working-with-form/src/App.js",["29"],[],"/home/dochien0204/Documents/ReactJS/working-with-form/src/components/SimpleInput.js",["30","31","32","33"],[],"/home/dochien0204/Documents/ReactJS/working-with-form/src/hooks/use-input.js",[],[],"/home/dochien0204/Documents/ReactJS/working-with-form/src/components/BasicForm.js",["34","35","36","37","38"],[],"import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  let regexEmail = /([a-zA-Z0-9]+)([\\.{1}])?([a-zA-Z0-9]+)\\@gmail([\\.])com/g;\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.trim() !== \"\" && regexEmail.test(value));\n\n  const firstNameClasses = !firstNameInputHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  const lastNameClasses = !lastNameInputHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  const emailClasses = !emailInputHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n  let formIsValid = false;\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    resetFirstNameInput();\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameInputHasError && (\n            <p className=\"error-text\">FirstName is required</p>\n          )}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameInputHasError && (\n            <p className=\"error-text\">LastName is required</p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Email is required or email is invalid</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n",{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":19},{"ruleId":"39","severity":1,"message":"43","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":5,"column":37,"nodeType":"46","messageId":"47","endLine":5,"endColumn":38,"suggestions":"48"},{"ruleId":"44","severity":1,"message":"49","line":5,"column":59,"nodeType":"46","messageId":"47","endLine":5,"endColumn":60,"suggestions":"50"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":68,"nodeType":"46","messageId":"47","endLine":5,"endColumn":69,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"45","line":4,"column":37,"nodeType":"46","messageId":"47","endLine":4,"endColumn":38,"suggestions":"52"},{"ruleId":"44","severity":1,"message":"49","line":4,"column":59,"nodeType":"46","messageId":"47","endLine":4,"endColumn":60,"suggestions":"53"},{"ruleId":"44","severity":1,"message":"45","line":4,"column":68,"nodeType":"46","messageId":"47","endLine":4,"endColumn":69,"suggestions":"54"},{"ruleId":"39","severity":1,"message":"55","line":20,"column":12,"nodeType":"41","messageId":"42","endLine":20,"endColumn":30},{"ruleId":"39","severity":1,"message":"56","line":29,"column":12,"nodeType":"41","messageId":"42","endLine":29,"endColumn":27},"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["57","58"],"Unnecessary escape character: \\@.",["59","60"],["61","62"],["63","64"],["65","66"],["67","68"],"'resetLastNameInput' is assigned a value but never used.","'resetEmailInput' is assigned a value but never used.",{"messageId":"69","fix":"70","desc":"71"},{"messageId":"72","fix":"73","desc":"74"},{"messageId":"69","fix":"75","desc":"71"},{"messageId":"72","fix":"76","desc":"74"},{"messageId":"69","fix":"77","desc":"71"},{"messageId":"72","fix":"78","desc":"74"},{"messageId":"69","fix":"79","desc":"71"},{"messageId":"72","fix":"80","desc":"74"},{"messageId":"69","fix":"81","desc":"71"},{"messageId":"72","fix":"82","desc":"74"},{"messageId":"69","fix":"83","desc":"71"},{"messageId":"72","fix":"84","desc":"74"},"removeEscape",{"range":"85","text":"86"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"87","text":"88"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"89","text":"86"},{"range":"90","text":"88"},{"range":"91","text":"86"},{"range":"92","text":"88"},{"range":"93","text":"86"},{"range":"94","text":"88"},{"range":"95","text":"86"},{"range":"96","text":"88"},{"range":"97","text":"86"},{"range":"98","text":"88"},[147,148],"",[147,147],"\\",[169,170],[169,169],[178,179],[178,178],[111,112],[111,111],[133,134],[133,133],[142,143],[142,142]]