{"ast":null,"code":"var _jsxFileName = \"/home/dochien0204/Documents/ReactJS/practice-project-two/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useEffect, useState } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValue = {\n  items: [],\n  totalAmount: 0,\n  isHas: false\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updateItem;\n    let updateItems;\n    if (existingCartItem) {\n      updateItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      state.items[existingCartItemIndex] = updateItem;\n      updateItems = [...state.items];\n    } else {\n      updateItems = state.items.concat(action.item);\n    }\n    state.i;\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updateTotalAmount = state.totalAmount - existingCartItem.price;\n    let updateItems;\n    if (existingCartItem.amount === 1) {\n      updateItems = state.items.filter(item => item.id !== existingCartItem.id);\n    } else {\n      const updateItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updateItems = [...state.items];\n      updateItems[existingCartItemIndex] = updateItem;\n    }\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n  return defaultValue;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultValue);\n  const [isHasItems, setIsHasItem] = useState(cartState.items.length > 0);\n  useEffect(() => {\n    const storedCartItem = localStorage.getItem(\"hasItems\");\n    if (storedCartItem === \"1\") {\n      setIsHasItem(true);\n    }\n  }, [isHasItems]);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n    localStorage.setItem(\"hasItems\", \"1\");\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"z+j6NaL2g/GbXTOXYcTXAhqtG5Q=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","useEffect","useState","CartContext","defaultValue","items","totalAmount","isHas","cartReducer","state","action","type","updateTotalAmount","item","amount","price","existingCartItemIndex","findIndex","id","existingCartItem","updateItem","updateItems","concat","i","filter","CartProvider","props","cartState","dispatchCartAction","isHasItems","setIsHasItem","length","storedCartItem","localStorage","getItem","addItemToCartHandler","setItem","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/home/dochien0204/Documents/ReactJS/practice-project-two/src/store/CartProvider.js"],"sourcesContent":["import { useReducer, useEffect, useState } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\n\nconst defaultValue = {\n    items: [],\n    totalAmount: 0,\n    isHas: false\n};\nconst cartReducer = (state, action) => {\n    if(action.type === \"ADD\") {\n        const updateTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n        \n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updateItem;\n        let updateItems;\n        if(existingCartItem) {\n            updateItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount\n            };\n            state.items[existingCartItemIndex] = updateItem;\n            updateItems = [...state.items];\n        } else {\n            updateItems = state.items.concat(action.item);\n        }\n        state.i\n        \n        return {\n            items: updateItems,\n            totalAmount: updateTotalAmount\n        }\n    }\n\n    if(action.type === \"REMOVE\") {\n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.id);\n        const existingCartItem = state.items[existingCartItemIndex];\n        const updateTotalAmount = state.totalAmount - existingCartItem.price;\n        let updateItems;\n\n        if(existingCartItem.amount === 1) {\n            updateItems = state.items.filter((item) => item.id !== existingCartItem.id);\n        } else {\n            const updateItem = {...existingCartItem, amount: (existingCartItem.amount - 1)}\n            updateItems = [...state.items];\n            updateItems[existingCartItemIndex] = updateItem;\n        }\n\n        return {\n            items: updateItems,\n            totalAmount: updateTotalAmount\n        }\n    }\n    return defaultValue;\n};\nconst CartProvider = (props) => {\n\n    const[cartState, dispatchCartAction] = useReducer(cartReducer, defaultValue);\n    const [isHasItems, setIsHasItem] = useState(cartState.items.length > 0);\n    \n    \n    useEffect(() => {\n        const storedCartItem = localStorage.getItem(\"hasItems\");\n        if(storedCartItem === \"1\") {\n            setIsHasItem(true);\n        }\n    }, [isHasItems]);\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartAction({type: \"ADD\", item: item});\n        localStorage.setItem(\"hasItems\", \"1\");\n    };\n    \n    const removeItemFromCartHandler = (id) => {\n        dispatchCartAction({type: \"REMOVE\", id: id});\n    };\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    };\n\n    return(\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}